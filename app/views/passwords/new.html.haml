
= form_for @password do |f|
  %p
    %div.title
      %span.title Learn on Demand Systems Password Pusher
  %p.payload
    = f.text_field(:payload, { :class => "password", :value => PAYLOAD_INITIAL_TEXT, :onfocus => "prepareTextField(this)", :onblur => "revertTextField(this)", :autocomplete => "off" })
  %p
    Expire secret link and delete the stored password after:
    %p.slider_box
      = range_field_tag("password_expire_after_days", EXPIRE_AFTER_DAYS_DEFAULT, {:name => "password[expire_after_days]", :class => "slider", :min => EXPIRE_AFTER_DAYS_MIN, :max => EXPIRE_AFTER_DAYS_MAX, :step => "1", :onchange => "showDaysValue(this.value)"})
      %span#daysrange
        == #{EXPIRE_AFTER_DAYS_DEFAULT} Days
    %p.slider_box
      = range_field_tag("password_expire_after_views", EXPIRE_AFTER_VIEWS_DEFAULT, {:name => "password[expire_after_views]", :class => "slider", :min => EXPIRE_AFTER_VIEWS_MIN, :max => EXPIRE_AFTER_VIEWS_MAX, :step => "1", :onchange => "showViewsValue(this.value)"})
      %span#viewsrange
        == #{EXPIRE_AFTER_VIEWS_DEFAULT} Views
    %br
    - if DELETABLE_BY_VIEWER_PASSWORDS
      %p.notes
        = check_box_tag "password[deletable_by_viewer]", nil, DELETABLE_BY_VIEWER_DEFAULT
        Allow viewers to optionally delete password before expiration

  %p
    = f.submit(:value => "Push it!")

%p.notes
  = link_to "FAQ", page_path('faq')
  \|
  = link_to "About PasswordPusher", page_path('about')